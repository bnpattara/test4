{% comment %}
  Product Compare
  Parameters:
    - products: Array of products to compare
    - features: Array of feature objects with name and key
    - show_images: Boolean to show product images
    - show_prices: Boolean to show product prices
    - show_actions: Boolean to show action buttons
{% endcomment %}

<div class="product-compare">
  <div class="product-compare__header">
    <h3 class="product-compare__title">Compare Products</h3>
    <button class="product-compare__close button button--text" aria-label="Close comparison">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
  </div>

  <div class="product-compare__table-container">
    <table class="product-compare__table">
      <thead>
        <tr>
          <th class="product-compare__feature-cell">Features</th>
          {% for product in products %}
            <th class="product-compare__product-cell">
              {% if show_images %}
                <div class="product-compare__product-image">
                  <img src="{{ product.featured_image | img_url: '200x' }}" alt="{{ product.title }}">
                </div>
              {% endif %}
              <div class="product-compare__product-title">{{ product.title }}</div>
              {% if show_prices %}
                <div class="product-compare__product-price">{{ product.price | money }}</div>
              {% endif %}
              {% if show_actions %}
                <div class="product-compare__product-actions">
                  <a href="{{ product.url }}" class="button button--primary">View Details</a>
                  <button class="button button--secondary" data-product-id="{{ product.id }}">Add to Cart</button>
                </div>
              {% endif %}
            </th>
          {% endfor %}
        </tr>
      </thead>
      <tbody>
        {% for feature in features %}
          <tr>
            <td class="product-compare__feature-cell">{{ feature.name }}</td>
            {% for product in products %}
              <td class="product-compare__value-cell">
                {% assign value = product.metafields[feature.key] %}
                {% if value %}
                  {{ value }}
                {% else %}
                  -
                {% endif %}
              </td>
            {% endfor %}
          </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</div>

<style>
  .product-compare {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--color-background);
    z-index: 1000;
    display: flex;
    flex-direction: column;
  }

  .product-compare__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-base);
    border-bottom: 1px solid var(--color-border);
  }

  .product-compare__title {
    font-size: var(--font-size-h3);
    font-weight: var(--font-weight-heading);
    margin: 0;
  }

  .product-compare__close {
    padding: calc(var(--spacing-base) / 2);
  }

  .product-compare__table-container {
    flex: 1;
    overflow: auto;
    padding: var(--spacing-base);
  }

  .product-compare__table {
    width: 100%;
    border-collapse: collapse;
  }

  .product-compare__feature-cell,
  .product-compare__product-cell,
  .product-compare__value-cell {
    padding: var(--spacing-base);
    border: 1px solid var(--color-border);
    text-align: left;
  }

  .product-compare__feature-cell {
    background: var(--color-background-alt);
    font-weight: var(--font-weight-heading);
    width: 200px;
  }

  .product-compare__product-cell {
    vertical-align: top;
    min-width: 250px;
  }

  .product-compare__product-image {
    margin-bottom: var(--spacing-base);
  }

  .product-compare__product-image img {
    width: 100%;
    height: auto;
    border-radius: var(--border-radius-small);
  }

  .product-compare__product-title {
    font-weight: var(--font-weight-heading);
    margin-bottom: calc(var(--spacing-base) / 2);
  }

  .product-compare__product-price {
    color: var(--color-text-muted);
    margin-bottom: var(--spacing-base);
  }

  .product-compare__product-actions {
    display: flex;
    gap: calc(var(--spacing-base) / 2);
  }

  .product-compare__value-cell {
    vertical-align: middle;
  }

  @media (max-width: 768px) {
    .product-compare__table {
      display: block;
    }

    .product-compare__feature-cell,
    .product-compare__product-cell,
    .product-compare__value-cell {
      display: block;
      width: 100%;
    }

    .product-compare__feature-cell {
      background: var(--color-background-alt);
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .product-compare__product-cell {
      border-bottom: 2px solid var(--color-border);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productCompare = document.querySelector('.product-compare');
    if (!productCompare) return;

    // Close button
    const closeButton = productCompare.querySelector('.product-compare__close');
    if (closeButton) {
      closeButton.addEventListener('click', () => {
        productCompare.remove();
      });
    }

    // Add to cart buttons
    const addToCartButtons = productCompare.querySelectorAll('[data-product-id]');
    addToCartButtons.forEach(button => {
      button.addEventListener('click', () => {
        const productId = button.dataset.productId;
        
        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            items: [{
              id: productId,
              quantity: 1
            }]
          })
        })
        .then(response => response.json())
        .then(data => {
          // Update cart count
          const event = new CustomEvent('cartUpdate', { detail: data });
          document.dispatchEvent(event);
          
          // Show success message
          const message = document.createElement('div');
          message.className = 'product-compare__message product-compare__message--success';
          message.textContent = 'Product added to cart successfully!';
          productCompare.appendChild(message);
          
          setTimeout(() => message.remove(), 3000);
        })
        .catch(error => {
          console.error('Error adding product to cart:', error);
          
          // Show error message
          const message = document.createElement('div');
          message.className = 'product-compare__message product-compare__message--error';
          message.textContent = 'Error adding product to cart. Please try again.';
          productCompare.appendChild(message);
          
          setTimeout(() => message.remove(), 3000);
        });
      });
    });

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        productCompare.remove();
      }
    });
  });
</script> 