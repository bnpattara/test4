{% comment %}
  Search template
  Accepts:
  - search: {Search} The search object
  - show_filters: {Boolean} Whether to show filters
  - show_sort: {Boolean} Whether to show sort options
  - show_pagination: {Boolean} Whether to show pagination
  - results_per_page: {Number} Number of results per page
{% endcomment %}

{% assign show_filters = show_filters | default: true %}
{% assign show_sort = show_sort | default: true %}
{% assign show_pagination = show_pagination | default: true %}
{% assign results_per_page = results_per_page | default: 12 %}

<div class="search">
  <div class="search__container">
    <div class="search__header">
      <h1 class="search__title">
        {% if search.performed %}
          {{ 'search.results' | t: terms: search.terms }}
        {% else %}
          {{ 'search.title' | t }}
        {% endif %}
      </h1>

      <form action="{{ routes.search_url }}" method="get" class="search__form">
        <input
          type="hidden"
          name="type"
          value="{{ search.types | join: ',' }}"
        >
        <div class="search__input-wrapper">
          <input
            type="search"
            name="q"
            value="{{ search.terms | escape }}"
            placeholder="{{ 'search.placeholder' | t }}"
            class="search__input"
          >
          <button type="submit" class="search__submit">
            <svg class="icon" viewBox="0 0 24 24">
              <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
            </svg>
          </button>
        </div>
      </form>
    </div>

    {% if search.performed %}
      <div class="search__controls">
        {% if show_filters %}
          <div class="search__filters">
            <button
              type="button"
              class="search__filters-button"
              aria-expanded="false"
              aria-controls="Filters"
            >
              {{ 'search.filters' | t }}
              <svg class="icon" viewBox="0 0 24 24">
                <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
              </svg>
            </button>
            <div class="search__filters-panel" id="Filters">
              {% for filter in search.filters %}
                <div class="search__filter">
                  <h3 class="search__filter-title">
                    {{ filter.label }}
                  </h3>
                  {% case filter.type %}
                    {% when 'boolean' or 'list' %}
                      <ul class="search__filter-values">
                        {% for value in filter.values %}
                          <li class="search__filter-value">
                            <label>
                              <input
                                type="checkbox"
                                name="{{ value.param_name }}"
                                value="{{ value.value }}"
                                {% if value.active %}checked{% endif %}
                                {% if value.count == 0 and value.active == false %}disabled{% endif %}
                              >
                              <span>
                                {{ value.label }}
                                {% if filter.type == 'list' %}
                                  ({{ value.count }})
                                {% endif %}
                              </span>
                            </label>
                          </li>
                        {% endfor %}
                      </ul>
                    {% when 'price_range' %}
                      <div class="search__filter-range">
                        <div class="search__filter-range-inputs">
                          <input
                            type="number"
                            name="{{ filter.min_value.param_name }}"
                            value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                            placeholder="{{ filter.min_value.placeholder }}"
                            min="0"
                            max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                          >
                          <span>-</span>
                          <input
                            type="number"
                            name="{{ filter.max_value.param_name }}"
                            value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                            placeholder="{{ filter.max_value.placeholder }}"
                            min="0"
                            max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                          >
                        </div>
                        <div class="search__filter-range-slider">
                          {% render 'slider',
                            min: 0,
                            max: filter.range_max | money_without_currency | replace: ',', '',
                            step: 1,
                            value: filter.current_min_value | money_without_currency | replace: ',', '',
                            class: 'search__filter-range-slider-input'
                          %}
                        </div>
                      </div>
                  {% endcase %}
                </div>
              {% endfor %}
            </div>
          </div>
        {% endif %}

        {% if show_sort %}
          <div class="search__sort">
            <label for="SortBy">
              {{ 'search.sort_by' | t }}
            </label>
            <select
              id="SortBy"
              name="sort_by"
              class="search__sort-select"
            >
              {% for option in search.sort_options %}
                <option
                  value="{{ option.value }}"
                  {% if option.value == search.sort_by %}selected{% endif %}
                >
                  {{ option.name }}
                </option>
              {% endfor %}
            </select>
          </div>
        {% endif %}
      </div>

      <div class="search__results">
        {% if search.results_count > 0 %}
          <div class="search__results-grid">
            {% for item in search.results %}
              {% case item.object_type %}
                {% when 'product' %}
                  {% render 'product-card', product: item %}
                {% when 'article' %}
                  <article class="search__result search__result--article">
                    <a href="{{ item.url }}" class="search__result-link">
                      {% if item.image %}
                        <div class="search__result-image">
                          <img
                            src="{{ item.image | image_url: width: 400 }}"
                            alt="{{ item.image.alt | escape }}"
                            width="{{ item.image.width }}"
                            height="{{ item.image.height }}"
                            loading="lazy"
                          >
                        </div>
                      {% endif %}
                      <div class="search__result-content">
                        <h2 class="search__result-title">
                          {{ item.title }}
                        </h2>
                        <div class="search__result-meta">
                          <time datetime="{{ item.published_at | date: '%Y-%m-%d' }}">
                            {{ item.published_at | date: format: 'date' }}
                          </time>
                          {% if item.comments_count > 0 %}
                            <span>
                              {{ 'search.comments' | t: count: item.comments_count }}
                            </span>
                          {% endif %}
                        </div>
                        <div class="search__result-excerpt">
                          {{ item.excerpt_or_content | strip_html | truncate: 150 }}
                        </div>
                      </div>
                    </a>
                  </article>
                {% when 'page' %}
                  <article class="search__result search__result--page">
                    <a href="{{ item.url }}" class="search__result-link">
                      <div class="search__result-content">
                        <h2 class="search__result-title">
                          {{ item.title }}
                        </h2>
                        <div class="search__result-excerpt">
                          {{ item.content | strip_html | truncate: 150 }}
                        </div>
                      </div>
                    </a>
                  </article>
              {% endcase %}
            {% endfor %}
          </div>

          {% if show_pagination and search.results_count > results_per_page %}
            {% render 'pagination', paginate: search.results %}
          {% endif %}
        {% else %}
          <div class="search__empty">
            <p class="search__empty-message">
              {{ 'search.no_results' | t: terms: search.terms }}
            </p>
            <a href="{{ routes.all_products_collection_url }}" class="search__empty-button">
              {{ 'search.continue_shopping' | t }}
            </a>
          </div>
        {% endif %}
      </div>
    {% endif %}
  </div>
</div>

<style>
  .search {
    padding: 2rem 0;
  }

  .search__container {
    max-width: var(--container-width);
    margin: 0 auto;
    padding: 0 1rem;
  }

  .search__header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    margin-bottom: 3rem;
    text-align: center;
  }

  .search__title {
    font-size: 2rem;
    font-weight: 700;
    margin: 0;
  }

  .search__form {
    width: 100%;
    max-width: 600px;
  }

  .search__input-wrapper {
    position: relative;
  }

  .search__input {
    width: 100%;
    padding: 1rem 3rem 1rem 1rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    background-color: var(--color-background);
    color: var(--color-foreground);
  }

  .search__submit {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
    padding: 0;
    border: none;
    background: none;
    color: var(--color-muted);
    cursor: pointer;
  }

  .search__submit:hover {
    color: var(--color-foreground);
  }

  .search__controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .search__filters {
    position: relative;
  }

  .search__filters-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    background-color: var(--color-background);
    color: var(--color-foreground);
    cursor: pointer;
  }

  .search__filters-button:hover {
    background-color: var(--color-background-alt);
  }

  .search__filters-panel {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1;
    display: none;
    width: 300px;
    margin-top: 0.5rem;
    padding: 1rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    background-color: var(--color-background);
  }

  .search__filters-button[aria-expanded="true"] + .search__filters-panel {
    display: block;
  }

  .search__filter {
    margin-bottom: 1rem;
  }

  .search__filter:last-child {
    margin-bottom: 0;
  }

  .search__filter-title {
    font-size: 1rem;
    font-weight: 600;
    margin: 0 0 0.5rem;
  }

  .search__filter-values {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .search__filter-value label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
  }

  .search__filter-value input[type="checkbox"] {
    width: 1rem;
    height: 1rem;
  }

  .search__filter-range {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .search__filter-range-inputs {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .search__filter-range-inputs input {
    width: 100px;
    padding: 0.5rem;
    border: 1px solid var(--color-border);
    border-radius: 0.25rem;
    background-color: var(--color-background);
    color: var(--color-foreground);
  }

  .search__sort {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .search__sort-select {
    padding: 0.5rem;
    border: 1px solid var(--color-border);
    border-radius: 0.25rem;
    background-color: var(--color-background);
    color: var(--color-foreground);
  }

  .search__results {
    margin-top: 2rem;
  }

  .search__results-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .search__result {
    border: 1px solid var(--color-border);
    border-radius: 0.5rem;
    overflow: hidden;
  }

  .search__result-link {
    display: block;
    color: var(--color-foreground);
    text-decoration: none;
  }

  .search__result-image {
    aspect-ratio: 16/9;
    overflow: hidden;
  }

  .search__result-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .search__result-content {
    padding: 1rem;
  }

  .search__result-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 0.5rem;
  }

  .search__result-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    color: var(--color-muted);
  }

  .search__result-excerpt {
    color: var(--color-muted);
  }

  .search__empty {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 4rem 2rem;
    text-align: center;
  }

  .search__empty-message {
    font-size: 1.25rem;
    color: var(--color-muted);
  }

  .search__empty-button {
    padding: 0.75rem 1.5rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    background-color: var(--color-background);
    color: var(--color-foreground);
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .search__empty-button:hover {
    background-color: var(--color-background-alt);
  }

  .icon {
    width: 24px;
    height: 24px;
    fill: currentColor;
  }

  @media (max-width: 768px) {
    .search__controls {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .search__filters-panel {
      width: 100%;
    }

    .search__results-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.search__form');
    const filtersButton = document.querySelector('.search__filters-button');
    const filtersPanel = document.querySelector('.search__filters-panel');
    const sortSelect = document.querySelector('.search__sort-select');

    // Toggle filters panel
    if (filtersButton && filtersPanel) {
      filtersButton.addEventListener('click', () => {
        const isExpanded = filtersButton.getAttribute('aria-expanded') === 'true';
        filtersButton.setAttribute('aria-expanded', !isExpanded);
      });
    }

    // Submit form when sort changes
    if (sortSelect) {
      sortSelect.addEventListener('change', () => {
        form.submit();
      });
    }

    // Submit form when filter changes
    const filterInputs = form.querySelectorAll('input[type="checkbox"], input[type="number"]');
    filterInputs.forEach(input => {
      input.addEventListener('change', () => {
        form.submit();
      });
    });
  });
</script> 